import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  Grid,
  GridItem,
  Heading,
  Text,
} from "@chakra-ui/react";
import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { IoBook, IoPeople, IoSchool } from "react-icons/io5";
import AdminLayout from "../../components/Layout/AdminLayout";
import { trpc } from "../../utils/trpc";
import { getCookie } from "cookies-next";

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const proto = ctx.req.headers["x-forwarded-proto"] ? "https" : "http";
  console.log(proto)
  const token = getCookie(
    proto == "http" ? "next-auth.session-token" : "__Secure-next-auth.session-token",
    { req: ctx.req, res: ctx.res }
  );
  if (!token) {
    return {
      redirect: {
        destination: "/login?referer=admin",
        permanent: false,
      },
    };
  }
  return {
    props: {},
  };
};

const Admin: NextPage = () => {
  const { data: Users } = trpc.useQuery(["user.getAllUsers"]);
  const { data: Guru } = trpc.useQuery(["guru.getAll"]);

  return (
    <AdminLayout
      title="Dashboard"
      breadcrumb={
        <Breadcrumb>
          <BreadcrumbItem>
            <BreadcrumbLink href="#">Home</BreadcrumbLink>
          </BreadcrumbItem>
          <BreadcrumbItem>
            <BreadcrumbLink href="#">Dashboard</BreadcrumbLink>
          </BreadcrumbItem>
        </Breadcrumb>
      }
    >
      <>
        <Head>
          <title>SMABAT || Admin</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className="p-5">
          <Grid
            templateColumns={{ base: "repeat(1, 1fr)", md: "repeat(4, 1fr)" }}
            gap={6}
          >
            <GridItem w="100%">
              <ItemInfo
                icon={<IoPeople color="white" size="25px" />}
                amount={Users?.result.length.toString()}
                title={"Total Users"}
              />
            </GridItem>
            <GridItem w="100%">
              <ItemInfo
                icon={<IoSchool color="white" size="25px" />}
                amount={"20"}
                title={"Total Siswa"}
              />
            </GridItem>
            <GridItem w="100%">
              <ItemInfo
                icon={<IoSchool color="white" size="25px" />}
                amount={Guru?.result.length.toString()}
                title={"Total Guru"}
              />
            </GridItem>
            <GridItem w="100%">
              <ItemInfo
                icon={<IoBook color="white" size="25px" />}
                amount={"13"}
                title={"Total Buku"}
              />
            </GridItem>
          </Grid>
        </div>
      </>
    </AdminLayout>
  );
};

interface ItemProps {
  title?: string;
  amount?: string;
  icon: any;
}

const ItemInfo = ({ amount, icon, title }: ItemProps) => {
  return (
    <div className="flex bg-white p-8 rounded-xl shadow-md flex-row items-center justify-between">
      <div className="flex flex-col items-start justify-center gap-y-[10px]">
        <Heading color={"gray.400"} size={"sm"}>
          {title}
        </Heading>
        <Heading size={"md"}>{amount}</Heading>
      </div>
      <div className="bg-orange-400 p-3 rounded-xl">{icon}</div>
    </div>
  );
};

export default Admin;
