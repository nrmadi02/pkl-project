import { ArrowBackIcon } from "@chakra-ui/icons";
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  Button,
  FormControl,
  FormErrorMessage,
  FormLabel,
  Heading,
  Input,
  useToast,
} from "@chakra-ui/react";
import { zodResolver } from "@hookform/resolvers/zod";
import { Siswa } from "@prisma/client";
import { getCookie } from "cookies-next";
import {
  GetServerSideProps,
  InferGetServerSidePropsType,
  NextPage,
} from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useCallback, useEffect } from "react";
import { useForm } from "react-hook-form";
import AdminLayout from "../../../../../components/Layout/AdminLayout";
import prismaFront from "../../../../../server/db/front";
import {
  createPanggilSchema,
  CreatePanggilSchema,
} from "../../../../../server/schema/panggil.schema";
import { trpc } from "../../../../../utils/trpc";

export const getServerSideProps: GetServerSideProps<{ data: Siswa }> = async (
  ctx
) => {
  const proto = ctx.req.headers["x-forwarded-proto"] ? "https" : "http";
  const token = getCookie(
    proto == "http"
      ? "next-auth.session-token"
      : "__Secure-next-auth.session-token",
    { req: ctx.req, res: ctx.res }
  );
  if (!token) {
    return {
      redirect: {
        destination: "/login?referer=admin",
        permanent: false,
      },
    };
  }

  const siswa = (await prismaFront.siswa.findFirst({
    where: {
      id: String(ctx.params?.id),
    },
  })) as unknown as Siswa;

  if (!siswa) {
    return {
      redirect: {
        destination: "/admin/data/siswa",
        permanent: false,
      },
    };
  }

  return {
    props: {
      data: JSON.parse(JSON.stringify(siswa)),
    },
  };
};

const PanggilOrangTua: NextPage<
  InferGetServerSidePropsType<typeof getServerSideProps>
> = ({ data }: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const { data: stateSession } = useSession();
  const router = useRouter();
  const toast = useToast();

  const {
    register,
    handleSubmit,
    watch,
    setValue,
    reset,
    formState: { errors, isSubmitting, isDirty, isValid },
  } = useForm<CreatePanggilSchema>({
    resolver: zodResolver(createPanggilSchema),
    mode: "onChange",
  });

  const { mutateAsync: tambahPanggil } = trpc.useMutation(["panggil.create"]);

  const handleAddPanggil = useCallback(
    async (data: CreatePanggilSchema) => {
      const result: any = await tambahPanggil(data);
      if (result.status === 201) {
        reset();
        toast({
          title: "Data berhasil ditambah",
          status: "success",
          duration: 3000,
          position: "top-right",
          isClosable: true,
        });
      } else {
        toast({
          title: "Data gagal ditambah",
          status: "error",
          duration: 3000,
          position: "top-right",
          isClosable: true,
        });
      }
    },
    [tambahPanggil]
  );

  useEffect(() => {
    data && setValue("siswaID", data.id);
  }, [data]);

  return (
    <AdminLayout
      title="Panggil Orang Tua"
      breadcrumb={
        <Breadcrumb>
          <BreadcrumbItem>
            <BreadcrumbLink>Pendataan</BreadcrumbLink>
          </BreadcrumbItem>
          <BreadcrumbItem>
            <Link href={"/admin/data/siswa"}>
              <BreadcrumbLink>Siswa</BreadcrumbLink>
            </Link>
          </BreadcrumbItem>
        </Breadcrumb>
      }
    >
      <>
        <Head>
          <title>SMABAT || Panggil Orang Tua</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className="px-5 py-2">
          <Button
            onClick={() => {
              router.back();
            }}
            leftIcon={<ArrowBackIcon />}
            color="orange.400"
            variant={"ghost"}
          >
            Kembali
          </Button>
          <Heading mt={"4"} size={"md"}>
            Input Data Panggilan
          </Heading>
          <div className="grid grid-cols-1 mt-3 md:mt-5 md:grid-cols-2 gap-3 md:gap-5">
            <FormControl>
              <FormLabel htmlFor="siswa">Nama Siswa</FormLabel>
              <Input
                bg={"white"}
                borderColor={"orange.300"}
                borderWidth={1}
                id="siswa"
                disabled
                defaultValue={data?.nama}
                placeholder="Masukan nama siswa"
              />
              {/* <FormErrorMessage>
                                {errorsTindak.penanganan && errorsTindak.penanganan.message}
                            </FormErrorMessage> */}
            </FormControl>
            <FormControl>
              <FormLabel htmlFor="deskripsi">Kelas</FormLabel>
              <Input
                bg={"white"}
                borderColor={"orange.300"}
                borderWidth={1}
                id="kelas"
                disabled
                defaultValue={String(data?.kelas)}
                placeholder="Masukan kelas"
              />
              {/* <FormErrorMessage>
                                {errorsTindak.tindakan && errorsTindak.tindakan.message}
                            </FormErrorMessage> */}
            </FormControl>
          </div>
          <form onSubmit={handleSubmit(handleAddPanggil)}>
            <div className="grid grid-cols-1 mt-5 md:grid-cols-2 gap-3 md:gap-5">
              <Input
                bg={"white"}
                borderColor={"orange.300"}
                borderWidth={1}
                id="siswaID"
                placeholder="Masukan id"
                type={"hidden"}
                {...register("siswaID")}
              />
              <FormControl isInvalid={errors.no_surat != undefined}>
                <FormLabel htmlFor="no_surat">No. Surat</FormLabel>
                <Input
                  bg={"white"}
                  borderColor={"orange.300"}
                  borderWidth={1}
                  id="no_surat"
                  placeholder="Masukan no surat"
                  {...register("no_surat")}
                />
                <FormErrorMessage>
                  {errors.no_surat && errors.no_surat.message}
                </FormErrorMessage>
              </FormControl>
              <FormControl isInvalid={errors.perihal != undefined}>
                <FormLabel htmlFor="perihal">Perihal</FormLabel>
                <Input
                  bg={"white"}
                  borderColor={"orange.300"}
                  borderWidth={1}
                  id="perihal"
                  placeholder="Masukan perihal"
                  {...register("perihal")}
                />
                <FormErrorMessage>
                  {errors.perihal && errors.perihal.message}
                </FormErrorMessage>
              </FormControl>
              <FormControl isInvalid={errors.nama_ortu != undefined}>
                <FormLabel htmlFor="nama_ortu">Nama Orang Tua Siswa</FormLabel>
                <Input
                  bg={"white"}
                  borderColor={"orange.300"}
                  borderWidth={1}
                  id="nama_ortu"
                  placeholder="Masukan nama orang tua siswa"
                  {...register("nama_ortu")}
                />
                <FormErrorMessage>
                  {errors.nama_ortu && errors.nama_ortu.message}
                </FormErrorMessage>
              </FormControl>
              <FormControl isInvalid={errors.tempat != undefined}>
                <FormLabel htmlFor="tempat">Tempat</FormLabel>
                <Input
                  bg={"white"}
                  borderColor={"orange.300"}
                  borderWidth={1}
                  id="tempat"
                  placeholder="Masukan tempat"
                  {...register("tempat")}
                />
                <FormErrorMessage>
                  {errors.tempat && errors.tempat.message}
                </FormErrorMessage>
              </FormControl>
              <FormControl isInvalid={errors.wali_kelas != undefined}>
                <FormLabel htmlFor="wali_kelas">Nama Wali Kelas</FormLabel>
                <Input
                  bg={"white"}
                  borderColor={"orange.300"}
                  borderWidth={1}
                  id="wali_kelas"
                  placeholder="Masukan nama wali kelas"
                  {...register("wali_kelas")}
                />
                <FormErrorMessage>
                  {errors.wali_kelas && errors.wali_kelas.message}
                </FormErrorMessage>
              </FormControl>
              <FormControl isInvalid={errors.nip_wali != undefined}>
                <FormLabel htmlFor="nip_wali">NIP Wali Kelas</FormLabel>
                <Input
                  bg={"white"}
                  borderColor={"orange.300"}
                  borderWidth={1}
                  id="nip_wali"
                  placeholder="Masukan NIP wali kelas"
                  {...register("nip_wali")}
                />
                <FormErrorMessage>
                  {errors.nip_wali && errors.nip_wali.message}
                </FormErrorMessage>
              </FormControl>
              <FormControl isInvalid={errors.nama_bk != undefined}>
                <FormLabel htmlFor="nama_bk">Nama Pemanggil (BK)</FormLabel>
                <Input
                  bg={"white"}
                  borderColor={"orange.300"}
                  borderWidth={1}
                  id="nama_bk"
                  placeholder="Masukan nama pemanggil(bk)"
                  {...register("nama_bk")}
                />
                <FormErrorMessage>
                  {errors.nama_bk && errors.nama_bk.message}
                </FormErrorMessage>
              </FormControl>
              <FormControl isInvalid={errors.nip_bk != undefined}>
                <FormLabel htmlFor="nip_bk">NIP Pemanggil(BK)</FormLabel>
                <Input
                  bg={"white"}
                  borderColor={"orange.300"}
                  borderWidth={1}
                  id="nip_bk"
                  placeholder="Masukan NIP pemanggil(bk)"
                  {...register("nip_bk")}
                />
                <FormErrorMessage>
                  {errors.nip_bk && errors.nip_bk.message}
                </FormErrorMessage>
              </FormControl>
              <FormControl isInvalid={errors.tanggal != undefined}>
                <FormLabel htmlFor="tanggal">Tanggal Panggilan</FormLabel>
                <Input
                  bg={"white"}
                  borderColor={"orange.300"}
                  borderWidth={1}
                  id="tanggal"
                  type={"date"}
                  placeholder="Masukan tanggal panggilan"
                  {...register("tanggal")}
                />
                <FormErrorMessage>
                  {errors.tanggal && errors.tanggal.message}
                </FormErrorMessage>
              </FormControl>
              <FormControl isInvalid={errors.waktu != undefined}>
                <FormLabel htmlFor="waktu">Jam Panggilan</FormLabel>
                <Input
                  bg={"white"}
                  borderColor={"orange.300"}
                  borderWidth={1}
                  id="waktu"
                  type={"time"}
                  placeholder="Masukan jam panggilan"
                  {...register("waktu")}
                />
                <FormErrorMessage>
                  {errors.waktu && errors.waktu.message}
                </FormErrorMessage>
              </FormControl>
            </div>
            <div className="flex justify-end flex-row mt-3 md:mt-5 items-center gap-3 md:gap-5">
              <Button
                onClick={() => {
                  router.back();
                }}
              >
                Batal
              </Button>
              <Button
                isLoading={isSubmitting}
                disabled={!isValid}
                type="submit"
                fontWeight={600}
                color={"white"}
                bg={"orange.400"}
                _hover={{
                  bg: "orange.300",
                }}
              >
                Panggil
              </Button>
            </div>
          </form>
        </div>
      </>
    </AdminLayout>
  );
};

export default PanggilOrangTua;
